<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 공통적으로 사용하려는 Bean을 그때그때 사용하면 되는 것 같다.  -->	
	
	<!--DB 연결  bean 등록하기 -->
	<!--
		1.DataSource 클래스 -> 접속정보를 관리하는 클래스 -> BasicDataSource 클래스 등록
		2.SqlSessionFactory 클래스 -> sqlSession을 생성해주는 클래스 -> SqlSessionFactoryBean 클래스 등록
		3.SqlSession 클래스 관리해주는 클래스 -> SqlSessionTemplate 클래스 등록
		
	  -->
	  
	  
	  
	  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
		</bean>
		
		<!--**  밑에 있는 모든 파일들으 ㄴ매퍼야  -->
		<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="configLocation" value="classpath:mybatis-config.xml"/>
			<property name="mapperLocations" value="classpath:mappers/**/*.xml"/>
		</bean>
		<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sessionFactory"/>
	</bean>
	  
	  
	  <!--트렌잭션 매니저  등록하기  -->
	  <!--기본적으로 aop 있고  anotationdriven  있어야함 -->
	  <bean id="transactionManager"
	  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  		
	  		<property name="dataSource"  ref="dataSource"/>		
	  </bean>
	  
	  <!--어노테이션으로 트렌젝션 을 선언한 내용을 가져올수있게 설정  -->
	  <!--  transaction-manager="transactionManager"    이름이 같으면 자동으로 매핑됨-->
	<!--   <tx:annotation-driven  transaction-manager="transactionManager"/> -->
	  
	  <!--xml 방식으로 트렌젝션 처리하기  -->
	  <!--어떨떄 처리를 할건지 생각해야함  -->
	  <tx:advice id="txAdvice" transaction-manager="transactionManager">
	  	<tx:attributes>
	  		<tx:method name="insert*"/>
	  		<tx:method name="update*"/>
	  	</tx:attributes>  
	  </tx:advice>
	  <aop:config>
	  	<aop:pointcut expression="execution(* com.bs.spring.board.model.service..insert*(..))" id="transPoint"/>
	  	<aop:advisor advice-ref="txAdvice"  pointcut-ref="transPoint"/>
	  </aop:config>
	  
</beans>
